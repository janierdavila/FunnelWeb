@model EntrySummary

<article class="blog-post @String.Join(" ", Html.CssKeywordsFor(Model))">
    <div class="row">
        @Html.DisplayFor(x => x.Published, new { @class = "revised" })

        <div class="span7">
            <h3 class="post-title">@Html.ActionLink(Model.Title, "Page", "Wiki", new { page = Model.Name }, null)</h3>
            <ul class="post-meta">
                <li>
                    <i class="icon-calendar icon-large"></i>
                    <span class="text-info">@Html.Date(Model.Published)</span> 
                </li>
                <li>
                    <i class="icon-comment icon-large"></i>
                    <a href='@Url.Action("Page", "Wiki", new { page = Model.Name })#comments'>
                                                                     <span class='comment-count text-info'>@Model.CommentCount</span>
                                                                     <span class="text-info">comment@(Model.CommentCount == 1 ? "" : "s")</span>
                                                                 </a>
                </li>
                <li>
                    <i class="icon-tag icon-large"></i>
                    <span class="text-info">@Html.DisplayFor(x => Model.TagsCommaSeparated)</span> 
                </li>
                
            </ul>
           
            <div class="post-content">
                @if (!string.IsNullOrEmpty(Model.Summary))
                {
                    <p>@Html.RenderTrusted(Model.Summary, Formats.Markdown)</p>
                }

                <p>
                    <a href="@Html.ActionUrl("Page", "Wiki", new { page = Model.Name })" class="btn btn-large btn-primary"><i class="icon-chevron-right"></i>Continue reading</a>
                </p>
            </div>
        </div>
    </div>
</article>

<hr />

@*<div class='post-line @String.Join(" ", Html.CssKeywordsFor(Model))'>
    @Html.DisplayFor(x => x.Published, new { @class = "revised" })
    <div class='comments'>
        @if (Html.Settings().EnableDisqusCommenting)
        {
            @Scripts.Render("~/bundles/disqus-count")
            <a href="@Url.Action("Page", "Wiki", new { page = Model.Name })#disqus_thread" data-disqus-identifier="@(Model.Title == null ? "" : (Model.Title + " - "))@Html.Settings().SiteTitle">Comment(s)</a>
        }
        else
        {
            <a href='@Url.Action("Page", "Wiki", new { page = Model.Name })#comments'>
                <span class='comment-count'>@Model.CommentCount</span>
                <span>comment@(Model.CommentCount == 1 ? "" : "s")</span>
            </a>
        }
    </div>
    <div class='summary'>
        <h2>@Html.ActionLink(Model.Title, "Page", "Wiki", new { page = Model.Name }, null)</h2>
        @if (!string.IsNullOrEmpty(Model.MetaDescription))
        {
            <p>@Html.RenderTrusted(Model.MetaDescription, Formats.Markdown)</p>
        }
        @Html.DisplayFor(x => Model.TagsCommaSeparated)
    </div>
</div>*@
